/*
 * Copyright 2009-2025 C3 AI (www.c3.ai). All Rights Reserved.
 * This material, including without limitation any software, is the confidential trade secret and proprietary
 * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is
 * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.
 * This material may be covered by one or more patents or pending patent applications.
 */

/**
 * A single building containing many {@link Apartment}s.
 */
entity type Building mixes MetricEvaluatable schema name 'BLDNG' {

  /**
   * The apartments that are inside this building.
   */
  apartments: [Apartment](building)

  /**
   * Finds the average temperature of all {@link SmartBulb}s in this building.
   */
  averageSmartBulbTemperature: member function(datetime: datetime): double js-server

  /**
   * This building's power grid status history in a descending order.
   */
  @db(order='descending(timestamp)')
  gridStatusSet: [PowerGridStatusSet](parent)

  /**
   * Latest status of this building's power grid.
   */
  @db(timedValueHistoryField='gridStatusSet')
  gridStatus: PowerGridStatus

  /**
   * Returns 100.
   */
  maximumHeight: member function(): int js-server
}
